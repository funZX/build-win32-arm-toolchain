###############################################################################
#! /bin/bash
###############################################################################


#set -x
#trap read debug


###############################################################################
source env.conf
###############################################################################



###############################################################################
function die() { echo -e  "\033[0;31m$*\033[0m" 1>&2; exit 1; }
###############################################################################
function unz()
{
	echo "Extracting $1"
	tar -$2xf $1
}
###############################################################################
# CREATE DIRS
###############################################################################
mkdir -p ${INSTALL_DIR}
mkdir -p ${HOST_TOOLS}
###############################################################################



# COMPILER PACKAGES
###############################################################################
SRC_LIBICONV=libiconv-${LIBICONV_VERSION}.tar.gz
DST_LIBICONV=${SRC_LIBICONV%.tar.gz}

SRC_GMP=gmp-${GMP_VERSION}.tar.bz2
DST_GMP=${SRC_GMP%.tar.bz2}

SRC_ISL=isl-${ISL_VERSION}.tar.xz
DST_ISL=${SRC_ISL%.tar.xz}

SRC_MPFR=mpfr-${MPFR_VERSION}.tar.gz
DST_MPFR=${SRC_MPFR%.tar.gz}

SRC_MPC=mpc-${MPC_VERSION}.tar.gz
DST_MPC=${SRC_MPC%.tar.gz}

SRC_BINUTILS=binutils-${BINUTILS_VERSION}.tar.gz
DST_BINUTILS=${SRC_BINUTILS%.tar.gz}

SRC_GCC=gcc-${GCC_VERSION}.tar.gz
DST_GCC=${SRC_GCC%.tar.gz}

SRC_GLIBC=glibc-${GLIBC_VERSION}.tar.gz
DST_GLIBC=${SRC_GLIBC%.tar.gz}

SRC_GDB=gdb-${GDB_VERSION}.tar.gz
DST_GDB=${SRC_GDB%.tar.gz}
###############################################################################



# DOWNLOAD
###############################################################################
[ ! -e ${SRC_LIBICONV} ] && \
	wget http://ftpmirror.gnu.org/libiconv/${SRC_LIBICONV}
[ ! -e ${SRC_GMP} ] && \
	wget http://ftpmirror.gnu.org/gmp/${SRC_GMP}
[ ! -e ${SRC_ISL} ] && \
	wget https://ftp.radix.pro/sources/packages/l/isl/${SRC_ISL}	
[ ! -e ${SRC_MPFR} ] && \
	wget http://ftpmirror.gnu.org/mpfr/${SRC_MPFR}
[ ! -e ${SRC_MPC} ] && \
	wget http://ftpmirror.gnu.org/mpc/${SRC_MPC}
[ ! -e ${SRC_BINUTILS} ] && \
	wget http://ftpmirror.gnu.org/binutils/${SRC_BINUTILS}
[ ! -e ${SRC_GCC} ] && \
	wget http://ftpmirror.gnu.org/gcc/gcc-${GCC_VERSION}/${SRC_GCC}
[ ! -e ${SRC_GLIBC} ] && \
	wget http://ftpmirror.gnu.org/glibc/${SRC_GLIBC}
[ ! -e ${SRC_GDB} ] && \
	wget http://ftpmirror.gnu.org/gdb/${SRC_GDB}
###############################################################################



# UNPACK
##############################################################################
[ ! -d ${DST_LIBICONV} ]	&& [ -e ${SRC_LIBICONV} ] 	&& unz ${SRC_LIBICONV} 		z
[ ! -d ${DST_GMP} ]			&& [ -e ${SRC_GMP} ] 		&& unz ${SRC_GMP}			j
[ ! -d ${DST_ISL} ]			&& [ -e ${SRC_ISL} ] 		&& unz ${SRC_ISL}			J
[ ! -d ${DST_MPFR} ]		&& [ -e ${SRC_MPFR} ] 		&& unz ${SRC_MPFR}			z
[ ! -d ${DST_MPC} ]			&& [ -e ${SRC_MPC} ] 		&& unz ${SRC_MPC}			z
[ ! -d ${DST_BINUTILS} ]	&& [ -e ${SRC_BINUTILS} ] 	&& unz ${SRC_BINUTILS}		z
[ ! -d ${DST_GCC} ]			&& [ -e ${SRC_GCC} ] 		&& unz ${SRC_GCC}			z
[ ! -d ${DST_GLIBC} ]		&& [ -e ${SRC_GLIBC} ] 		&& unz ${SRC_GLIBC}			z
[ ! -d ${DST_GDB} ]  		&& [ -e ${SRC_GDB} ] 		&& unz ${SRC_GDB}			z
###############################################################################



# VERIFY ENVIRONMENT
###############################################################################
[ -d ${DST_LIBICONV} ] 		|| die 'LIBICONV download or extraction failed!'
[ -d ${DST_GMP} ] 			|| die 'GMP download or extraction failed!'
[ -d ${DST_ISL} ] 			|| die 'ISL download or extraction failed!'
[ -d ${DST_BINUTILS} ] 		|| die 'BINUTILS download or extraction failed!'
[ -d ${DST_MPFR} ] 			|| die 'MPFR download or extraction failed!'
[ -d ${DST_MPC} ] 			|| die 'MPC download or extraction failed!'
[ -d ${DST_GCC} ] 			|| die 'GCC download or extraction failed!'
[ -d ${DST_GLIBC} ] 		|| die 'GLIBC download or extraction failed!'
[ -d ${DST_GDB} ] 			|| die 'GDB download or extraction failed!'
###############################################################################


# BUILD LIBICONV
###############################################################################
function do_libiconv()
{
	export CC="${HOST}-gcc"
	export CXX="${HOST}-g++"
	export CPP="${HOST}-gcc -E"
	export AR="${HOST}-gcc-ar"
	export CFLAGS='-O2 -D__USE_MINGW_ACCESS'
	export CXXFLAGS='-O2 -D__USE_MINGW_ACCESS'

	../../libiconv-${LIBICONV_VERSION}/configure \
		--prefix=${HOST_TOOLS} \
		--build=${HOST} \
		--enable-static \
		--disable-shared		

	make
	RESULT=$?
	
	[ "0" = "${RESULT}" ] && make install
	
	return ${RESULT}
}
###############################################################################



# BUILD GMP
###############################################################################
function do_gmp()
{
	export CC="${HOST}-gcc"
	export CXX="${HOST}-g++"
	export CPP="${HOST}-gcc -E"
	export AR="${HOST}-gcc-ar"
	export CFLAGS='-O2 -D__USE_MINGW_ACCESS'
	export CXXFLAGS='-O2 -D__USE_MINGW_ACCESS'
	
	../../gmp-${GMP_VERSION}/configure \
		--prefix=${HOST_TOOLS} \
		--build=${HOST} \
		--enable-static \
		--disable-shared		

	make
	RESULT=$?
	
	[ "0" = "${RESULT}" ] && make install 
	
	return ${RESULT}
}
###############################################################################



# BUILD ISL
###############################################################################
function do_isl()
{
	export CC="${HOST}-gcc"
	export CXX="${HOST}-g++"
	export CPP="${HOST}-gcc -E"
	export AR="${HOST}-gcc-ar"
	export CFLAGS='-O2 -D__USE_MINGW_ACCESS'
	export CXXFLAGS='-O2 -D__USE_MINGW_ACCESS'
	
	../../isl-${ISL_VERSION}/configure \
		--prefix=${HOST_TOOLS} \
		--build=${HOST} \
		--with-gmp-prefix=${HOST_TOOLS} \
		--enable-static \
		--disable-shared
		
	make
	RESULT=$?
	
	[ "0" = "${RESULT}" ] && make install
	
	return ${RESULT}	
}
###############################################################################



# BUILD MPFR
###############################################################################
function do_mpfr()
{
	export CC="${HOST}-gcc"
	export CXX="${HOST}-g++"
	export CPP="${HOST}-gcc -E"
	export AR="${HOST}-gcc-ar"
	export CFLAGS='-O2 -D__USE_MINGW_ACCESS'
	export CXXFLAGS='-O2 -D__USE_MINGW_ACCESS'
	
	../../mpfr-${MPFR_VERSION}/configure \
		--prefix=${HOST_TOOLS} \
		--build=${HOST} \
		--with-gmp-prefix=${HOST_TOOLS} \
		--enable-static \
		--disable-shared

	make
	RESULT=$?
	
	[ "0" = "${RESULT}" ] && make install
	
	return ${RESULT}	
}
###############################################################################



# BUILD MPC
###############################################################################
function do_mpc()
{
	export CC="${HOST}-gcc"
	export CXX="${HOST}-g++"
	export CPP="${HOST}-gcc -E"
	export AR="${HOST}-gcc-ar"
	export CFLAGS='-O2 -D__USE_MINGW_ACCESS'
	export CXXFLAGS='-O2 -D__USE_MINGW_ACCESS'
	
	../../mpc-${MPC_VERSION}/configure \
		--prefix=${HOST_TOOLS} \
		--build=${HOST} \
		--with-gmp-prefix=${HOST_TOOLS} \
		--with-mpfr-prefix=${HOST_TOOLS} \
		--enable-static \
		--disable-shared

	make
	RESULT=$?
	
	[ "0" = "${RESULT}" ] && make install
	
	return ${RESULT}	
}
###############################################################################



# BUILD BINUTILS
###############################################################################
function do_binutils()
{
	export CC="${HOST}-gcc"
	export CXX="${HOST}-g++"
	export CPP="${HOST}-gcc -E"
	export AR="${HOST}-gcc-ar"
	export CFLAGS='-O2 -D__USE_MINGW_ACCESS'
	export CXXFLAGS='-O2 -D__USE_MINGW_ACCESS'
	
	../../binutils-${BINUTILS_VERSION}/configure \
		--prefix=${INSTALL_DIR} \
		--build=${HOST} \
		--target=${TARGET} \
		--with-libiconv-prefix=${HOST_TOOLS} \
		--with-isl-prefix=${HOST_TOOLS} \
		--with-gmp-prefix=${HOST_TOOLS} \
		--with-mpc-prefix=${HOST_TOOLS} \
		--with-mpfr-prefix=${HOST_TOOLS} \
		--enable-lto \
		--enable-plugins \
		--enable-gold \
		--enable-threads \
		--enable-ld=default \
		--enable-static \
		--disable-shared \
		--disable-nls \
		--disable-libssp \
		--disable-libada

	LDFLAGS='-static -liconv' make
	RESULT=$?
	
	[ "0" = "${RESULT}" ] && make install-strip
	
	return ${RESULT}	
}
###############################################################################



# BUILD GCC STAGE 1
###############################################################################
function do_xgcc()
{
	export CC="${HOST}-gcc"
	export CXX="${HOST}-g++"
	export CPP="${HOST}-gcc -E"
	export AR="${HOST}-gcc-ar"
	export CFLAGS='-O2 -D__USE_MINGW_ACCESS'
	
	../../gcc-${GCC_VERSION}/configure \
		--prefix=${INSTALL_DIR} \
		--host=${HOST} \
		--build=${HOST} \
		--target=${TARGET} ${TUNE} \
		--with-sysroot=${SYSROOT} \
		--with-libiconv-prefix=${HOST_TOOLS} \
		--with-isl=${HOST_TOOLS} \
		--with-gmp=${HOST_TOOLS} \
		--with-mpc=${HOST_TOOLS} \
		--with-mpfr=${HOST_TOOLS} \
		--with-newlib \
		--without-headers \
		--enable-languages=c \
		--disable-threads \
		--disable-shared \
		--disable-nls \
		--disable-libmudflap \
		--disable-libgomp \
		--disable-libitm \
		--disable-libquadmath \
		--disable-libsanitizer \
		--disable-libssp \
		--disable-libada \
		--disable-libvtv \
		--disable-libcilkrts \
		--disable-libatomic \
		--disable-bootstrap \
		--enable-gnu-indirect-function 
		
	make
	RESULT=$?
	
	[ "0" = "${RESULT}" ] && make install-strip
	
	return ${RESULT}
}
###############################################################################


# BUILD GLIBC
###############################################################################
function do_glibc()
{
	export CC="${TARGET}-gcc"
	export CXX="${TARGET}-g++"
	export CPP="${TARGET}-gcc -E"
	export AR="${TARGET}-gcc-ar"
	export CFLAGS='-O2 -march=armv7-a -mthumb -mfpu=neon -mfloat-abi=hard -fPIC'
	
	../../glibc-${GLIBC_VERSION}/configure \
		--prefix=${INSTALL_DIR} \
		--host=${TARGET} \
		--build=${HOST} \
		--target=${TARGET} \
		--localedir=//usr//share//locale \
		--with-gnu-ld \
		--with-gnu-as \
		--with-tls \
		--without-selinux \
		--without-cvs \
		--without-gd \
		--with-headers=${SYSROOT}/usr/include \
		--disable-nls \
		--disable-sanity-checks \
		--disable-profile \
		--disable-debug \
		--enable-hacker-mode \
		libc_cv_forced_unwind=yes \
		libc_cv_c_cleanup=yes \
		libc_cv_ssp=no \
		libc_cv_ssp_strong=no \		
		libc_cv_gnu89_inline=yes
		
	make
	RESULT=$?
	
	[ "0" = "${RESULT}" ] && make install-strip
	
	return ${RESULT}	
}
###############################################################################


# BUILD GCC STAGE 2
###############################################################################
function do_gcc()
{
	export CC="${HOST}-gcc"
	export CXX="${HOST}-g++"
	export CPP="${HOST}-gcc -E"
	export AR="${HOST}-gcc-ar"
	export CFLAGS='-O2 -D__USE_MINGW_ACCESS'

	../../gcc-${GCC_VERSION}/configure \
		--prefix=${INSTALL_DIR} \
		--host=${HOST} \
		--build=${HOST} \
		--target=${TARGET} ${TUNE} \
		--with-sysroot=${SYSROOT} \
		--with-libiconv-prefix=${HOST_TOOLS} \
		--with-isl=${HOST_TOOLS} \
		--with-gmp=${HOST_TOOLS} \
		--with-mpc=${HOST_TOOLS} \
		--with-mpfr=${HOST_TOOLS} \
		--enable-languages=c,c++ \
		--enable-threads=posix \
		--enable-checking=release \
		--enable-shared \
		--disable-nls \
		--disable-libmudflap \
		--disable-libssp \
		--disable-libada \
		--disable-bootstrap \
		--enable-gnu-indirect-function 
		
	LDFLAGS='-static -liconv -lpthread' make 
	RESULT=$?
	
	[ "0" = "${RESULT}" ] && make install-strip
	
	return ${RESULT}
}
###############################################################################


# BUILD GDB
###############################################################################
function do_gdb()
{
	export CC="${HOST}-gcc"
	export CXX="${HOST}-g++"
	export CPP="${HOST}-gcc -E"
	export AR="${HOST}-gcc-ar"
	export CFLAGS='-O2 -D__USE_MINGW_ACCESS'
	
	../../gdb-${GDB_VERSION}/configure \
		--prefix=${INSTALL_DIR} \
		--host=${HOST} \
		--build=${HOST} \
		--target=${TARGET} \
		--with-libiconv-prefix=${HOST_TOOLS} \
		--with-isl=${HOST_TOOLS} \
		--with-gmp=${HOST_TOOLS} \
		--with-mpc=${HOST_TOOLS} \
		--with-mpfr=${HOST_TOOLS} \
		--enable-static \
		--disable-shared

	LDFLAGS='-static -liconv -lpthread' make
	RESULT=$?
	
	[ "0" = "${RESULT}" ] && make install-strip
	
	return ${RESULT}
}
###############################################################################
function job()
{
	mkdir -p build/$1
	pushd build/$1; do_$1; popd;
}
export -f job
###############################################################################

job libiconv
job gmp
job isl
job mpfr
job mpc
job binutils
job xgcc
#job glibc
#job gcc
#job gdb

###############################################################################
